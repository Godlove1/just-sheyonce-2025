// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




model Category {
  id          Int       @id @default(autoincrement())
  categoryCode String   @default(cuid())
  name        String
  description String?
  products    Product[]
}

model Product {
  id Int @id @default(autoincrement())
  productCode     String   @default(cuid())
  name           String
  description    String?
  price          Decimal     @db.Decimal(10, 2)
  categoryId     Int?
  category       Category?   @relation(fields: [categoryId], references: [id])
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  orderItems     OrderItem[]
  images         String[]    // Array of image URLs
  availableSizes String[]    // Array of available sizes
  hasSizes       Boolean     @default(true)
}

model User {
  id           String      @id @default(cuid())
  username     String   @unique
  email        String   @unique
  role         String   @default("ADMIN")
  passwordHash String
  createdAt    DateTime @default(now())
  orders       Order[]
}

model Order {
  id          Int         @id @default(autoincrement())
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  totalAmount Decimal     @db.Decimal(10, 2)
  status      String
  createdAt   DateTime    @default(now())
  orderItems  OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Decimal @db.Decimal(10, 2)
  size      String? // Added size field for order items
}


model WebsiteInfo {
  id           String   @id @default(cuid())
  email        String   @unique
  address      String
  phone        String
  whatsApp     String
  snapchat     String
  instagram    String
  facebook     String
  twitter      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}


model GlobalDiscount {
  id         Int   @id @default(autoincrement())
  percentage Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  status Boolean @default(false)
}